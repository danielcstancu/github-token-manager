---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: tokens.github.as-code.io
spec:
  group: github.as-code.io
  names:
    kind: Token
    listKind: TokenList
    plural: tokens
    singular: token
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Token is the Schema for the Tokens API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TokenSpec defines the desired state of Token
            properties:
              basicAuth:
                description: Create a secret with 'username' and 'password' fields
                  rather than 'token'
                type: boolean
              installationID:
                description: Specify or override the InstallationID of the GitHub
                  App for this Token
                example: "123456789"
                format: int64
                type: integer
              permissions:
                description: Specify the permissions for the token as a subset of
                  those of the GitHub App
                example:
                  contents: read
                  metadata: read
                properties:
                  actions:
                    enum:
                    - read
                    - write
                    type: string
                  administration:
                    enum:
                    - read
                    - write
                    type: string
                  checks:
                    enum:
                    - read
                    - write
                    type: string
                  codespaces:
                    enum:
                    - read
                    - write
                    type: string
                  contents:
                    enum:
                    - read
                    - write
                    type: string
                  dependabot_secrets:
                    enum:
                    - read
                    - write
                    type: string
                  deployments:
                    enum:
                    - read
                    - write
                    type: string
                  email_addresses:
                    enum:
                    - read
                    - write
                    type: string
                  environments:
                    enum:
                    - read
                    - write
                    type: string
                  followers:
                    enum:
                    - read
                    - write
                    type: string
                  issues:
                    enum:
                    - read
                    - write
                    type: string
                  members:
                    enum:
                    - read
                    - write
                    type: string
                  metadata:
                    enum:
                    - read
                    - write
                    type: string
                  organization_administration:
                    enum:
                    - read
                    - write
                    type: string
                  organization_custom_roles:
                    enum:
                    - read
                    - write
                    type: string
                  organization_hooks:
                    enum:
                    - read
                    - write
                    type: string
                  organization_packages:
                    enum:
                    - read
                    - write
                    type: string
                  organization_plan:
                    enum:
                    - read
                    - write
                    type: string
                  organization_projects:
                    enum:
                    - read
                    - write
                    type: string
                  organization_secrets:
                    enum:
                    - read
                    - write
                    type: string
                  organization_self_hosted_runners:
                    enum:
                    - read
                    - write
                    type: string
                  organization_user_blocking:
                    enum:
                    - read
                    - write
                    type: string
                  packages:
                    enum:
                    - read
                    - write
                    type: string
                  pages:
                    enum:
                    - read
                    - write
                    type: string
                  pull_requests:
                    enum:
                    - read
                    - write
                    type: string
                  repository_custom_properties:
                    enum:
                    - read
                    - write
                    type: string
                  repository_hooks:
                    enum:
                    - read
                    - write
                    type: string
                  repository_projects:
                    enum:
                    - read
                    - write
                    - admin
                    type: string
                  secret_scanning_alerts:
                    enum:
                    - read
                    - write
                    type: string
                  secrets:
                    enum:
                    - read
                    - write
                    type: string
                  security_events:
                    enum:
                    - read
                    - write
                    type: string
                  single_file:
                    enum:
                    - read
                    - write
                    type: string
                  statuses:
                    enum:
                    - read
                    - write
                    type: string
                  team_discussions:
                    enum:
                    - read
                    - write
                    type: string
                  vulnerability_alerts:
                    enum:
                    - read
                    - write
                    type: string
                  workflows:
                    enum:
                    - write
                    type: string
                type: object
              refreshInterval:
                default: 10m
                description: 'Specify how often to refresh the token (maximum: 1h)'
                example: 45m
                format: duration
                type: string
              repositories:
                description: Specify the repositories for which the token should have
                  access
                items:
                  type: string
                maxItems: 500
                type: array
              repositoryIDs:
                description: Specify the repository IDs for which the token should
                  have access
                items:
                  format: int64
                  type: integer
                maxItems: 500
                type: array
              secretName:
                description: |-
                  kubebuilder:validation:MaxLength:=253
                  Name of the Secret to create for this token (defaults to the name of the Token)
                type: string
            type: object
          status:
            description: TokenStatus defines the observed state of Token
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              installationAccessToken:
                properties:
                  expiresAt:
                    format: date-time
                    type: string
                  refreshAt:
                    format: date-time
                    type: string
                  updatedAt:
                    format: date-time
                    type: string
                type: object
              managedSecretName:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
